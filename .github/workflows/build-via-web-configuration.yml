name: Build via Web Configuration

on:
  workflow_dispatch:
    inputs:
      app_url:
        description: 'URL Website (e.g., https://example.com)'
        required: true
        default: 'https://example.com'
      app_id:
        description: 'Package ID (e.g., myapp)'
        required: true
        default: 'web2apk'
      app_name:
        description: 'Display Name Aplikasi'
        required: true
        default: 'My Web App'
      icon_url:
        description: 'URL ke file PNG Ikon (192x192 disarankan)'
        required: false
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    # Memberikan izin untuk menulis ke Releases
    permissions:
      contents: write 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Configure Signing Properties
        run: |
          STORE_FILE="${{ secrets.MYAPP_RELEASE_STORE_FILE }}"
          
          if [ ! -f "app/$STORE_FILE" ]; then
            echo "Error: Keystore file app/$STORE_FILE not found in repository."
            exit 1
          fi
          
          echo "MYAPP_RELEASE_STORE_FILE=$STORE_FILE" >> gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}" >> gradle.properties
        env:
          MYAPP_RELEASE_STORE_FILE: ${{ secrets.MYAPP_RELEASE_STORE_FILE }}
          MYAPP_RELEASE_STORE_PASSWORD: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          MYAPP_RELEASE_KEY_ALIAS: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          MYAPP_RELEASE_KEY_PASSWORD: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x gradlew

      # --- LANGKAH PENGGANTI make.sh: APPLY CONFIGURATION DAN RENAME PACKAGE ---
      - name: Apply Configuration and Rename Package (TANPA make.sh)
        id: apply_config
        run: |
          NEW_APP_ID="${{ github.event.inputs.app_id }}"
          NEW_APP_NAME="${{ github.event.inputs.app_name }}"
          NEW_URL="${{ github.event.inputs.app_url }}"
          ICON_URL="${{ github.event.inputs.icon_url }}"
          
          OLD_APP_ID=$(grep -Po '(?<=applicationId "com\.)[^.]*' app/build.gradle)
          
          # 1. RENAME PACKAGE ID (chid)
          if [ "$OLD_APP_ID" != "$NEW_APP_ID" ]; then
              OLD_PKG="com.$OLD_APP_ID.webtoapk"
              NEW_PKG="com.$NEW_APP_ID.webtoapk"
              find . -type f \( -name '*.gradle' -o -name '*.xml' -o -name '*.java' \) -exec \
                  sed -i "s/$OLD_PKG/$NEW_PKG/g" {} +
                  
              OLD_PATH="app/src/main/java/com/$OLD_APP_ID"
              NEW_PATH="app/src/main/java/com/$NEW_APP_ID"
              if [ -d "$OLD_PATH" ]; then
                  mkdir -p app/src/main/java/com/
                  mv "$OLD_PATH" "$NEW_PATH"
              fi
          fi
          
          # 2. GANTI DISPLAY NAME, URL, dan Ikon
          ESCAPED_NAME=$(echo "$NEW_APP_NAME" | sed 's/[\/&]/\\&/g')
          find app/src/main/res/values* -name "strings.xml" | while read xml_file; do
             sed -i "s|<string name=\"app_name\">[^<]*</string>|<string name=\"app_name\">$ESCAPED_NAME</string>|" "$xml_file"
          done
          
          JAVA_FILE="app/src/main/java/com/$NEW_APP_ID/webtoapk/MainActivity.java"
          ESCAPED_URL=$(echo "$NEW_URL" | sed 's/[\/&]/\\&/g')
          sed -i "s|String url = \"[^\"]*\";|String url = \"$ESCAPED_URL\";|" "$JAVA_FILE"
          
          if [ -n "$ICON_URL" ]; then
              curl -L -o "app/src/main/res/mipmap/ic_launcher.png" "$ICON_URL"
          fi
          
          # Output untuk rilis dan artifact
          echo "APP_NAME=$NEW_APP_ID" >> $GITHUB_OUTPUT

      # --- BUILD AAB dan APK ---
      - name: Build Signed Assets
        # Melakukan kedua build sekaligus untuk efisiensi
        run: ./gradlew :app:bundleRelease :app:assembleRelease --stacktrace

      # --- LANGKAH BARU: MEMBUAT DAN MENGUNGGAH KE GITHUB RELEASES ---
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # Tag rilis baru berdasarkan waktu build
          tag_name: ${{ steps.apply_config.outputs.APP_NAME }}-${{ github.run_number }}
          name: ${{ steps.apply_config.outputs.APP_NAME }} Build #${{ github.run_number }}
          body: |
            Build otomatis untuk: 
            - **App Name:** ${{ github.event.inputs.app_name }}
            - **Package ID:** com.${{ steps.apply_config.outputs.APP_NAME }}.webtoapk
            - **URL:** ${{ github.event.inputs.app_url }}
          draft: false
          prerelease: false
          # Melampirkan semua file AAB dan APK dari folder output
          files: |
            app/build/outputs/bundle/release/*.aab
            app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
