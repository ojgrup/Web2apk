# File: .github/workflows/android_release_build.yml

name: Build dan Sign AAB Rilis (Native Android)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Kredensial Keystore dari GitHub Secrets
    env:
      STORE_FILE: ${{ secrets.KEYSTORE_FILE }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # --- LANGKAH PENTING: Setup Java dan Keystore ---
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Copy Keystore File
      # Asumsi file keystore Anda (misal: 'web2apk_rilis.jks') ada di root proyek
      # atau di folder 'app'. Jika ia ada di 'android/app/', sesuaikan path-nya.
      run: |
        # Asumsikan file keystore (contoh: web2apk_rilis.jks) sudah di-commit 
        # di dalam folder 'app/' (sesuai dengan path build.gradle Anda).
        # Jika Anda menaruhnya di root proyek, ganti 'app/' menjadi './'.
        echo "Keystore file assumed to be at 'app/${{ env.STORE_FILE }}'"
        
    - name: Inject Keystore Properties
      # Kita membuat file 'keystore.properties' di folder 'app' (atau 'android/app' jika itu strukturnya)
      # yang akan dibaca oleh 'build.gradle' (Langkah ini menggantikan 'gradle.properties' home)
      # Ganti path 'app/' menjadi 'android/app/' jika struktur proyek Anda adalah 'android/app/build.gradle'
      run: |
        echo "RELEASE_STORE_FILE=${{ env.STORE_FILE }}" >> app/keystore.properties
        echo "RELEASE_STORE_PASSWORD=${{ env.STORE_PASSWORD }}" >> app/keystore.properties
        echo "RELEASE_KEY_ALIAS=${{ env.KEY_ALIAS }}" >> app/keystore.properties
        echo "RELEASE_KEY_PASSWORD=${{ env.KEY_PASSWORD }}" >> app/keystore.properties
        
    # --- LANGKAH KUNCI: Build dengan Gradle ---
    - name: Grant Execute Permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Signed Android App Bundle (AAB)
      # Perintah 'bundleRelease' akan membuat AAB yang ditandatangani
      # berdasarkan konfigurasi signingConfigs.release di build.gradle
      run: ./gradlew bundleRelease
      
    - name: Upload Signed AAB Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Signed-Release-AAB
        path: app/build/outputs/bundle/release/app-release.aab # Path standar Native Android
        retention-days: 7
