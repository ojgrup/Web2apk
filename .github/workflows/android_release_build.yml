name: Build dan Sign AAB Rilis (Direct Gradle)

on:
  push:
    branches:
      # Ganti dengan branch utama Anda jika bukan master (misalnya: main)
      - master 

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Extract App Name (for Artifact Naming)
        id: get_appname
        run: |
          # Ambil nama aplikasi dari build.gradle (misalnya, 'web2apk')
          APP_NAME=$(grep -Po '(?<=applicationId "com\.)[^.]*' app/build.gradle)
          echo "APP_NAME=$APP_NAME" >> $GITHUB_OUTPUT
          echo "App name for artifact: $APP_NAME"

      - name: Configure Signing Properties
        # Langkah ini akan menyuntikkan secrets ke file gradle.properties sebelum build
        run: |
          # Periksa apakah file keystore ada. Jika tidak ada, build akan gagal di Gradle.
          if [ ! -f "app/${{ secrets.MYAPP_RELEASE_STORE_FILE }}" ]; then
            echo "Error: Keystore file app/${{ secrets.MYAPP_RELEASE_STORE_FILE }} not found in repository."
            exit 1
          fi
          
          echo "MYAPP_RELEASE_STORE_FILE=${{ secrets.MYAPP_RELEASE_STORE_FILE }}" >> gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}" >> gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}" >> gradle.properties
        env:
          MYAPP_RELEASE_STORE_FILE: ${{ secrets.MYAPP_RELEASE_STORE_FILE }}
          MYAPP_RELEASE_STORE_PASSWORD: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          MYAPP_RELEASE_KEY_ALIAS: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          MYAPP_RELEASE_KEY_PASSWORD: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build Signed App Bundle (Direct Gradle)
        # Langsung panggil task Gradle untuk membuat AAB yang sudah ditandatangani
        run: ./gradlew :app:bundleRelease --stacktrace

      - name: Upload Signed AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_appname.outputs.APP_NAME }}-release-aab
          # JALUR BARU: Mengambil file AAB di lokasi default Gradle.
          # Catatan: make.sh (yang lama) memindahkan file. Karena kita tidak menggunakan make.sh lagi,
          # kita kembali ke lokasi output standar.
          path: app/build/outputs/bundle/release/*.aab 
          retention-days: 7
